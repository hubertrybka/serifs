[RUN]
# training data path (data/train_data/RNN_dataset_KRFP.parquet for KRFP
#                     or data/train_data/RNN_dataset_ECFP.parquet for ECFP4)
data_path = data/RNN_dataset_KRFP.parquet
# name of the model
run_name = jotaro-joestar
# batch size
batch_size = 256
# epochs
epochs = 200
# first epoch No.
start_epoch = 1
# learning rate
learn_rate = 0.00008
# if true, backpropagate the KLD loss
kld_backward = true
# weight of the KLD loss (beta)
kld_weight = 0.001
# if true, use KLD annealing
kld_annealing = true
# anneal until epoch
annealing_max_epoch = 30
# annealing shape (linear, cosine or sigmoid)
annealing_shape = linear
# if true,
smiles_enum = false
# fraction of the data to be used for training
train_size = 0.8
# random seed for splitting the data
random_seed = 42
# number of workers for data loading
num_workers = 3
# if true, use GPU if available
use_cuda = true

[MODEL]
# length of the fingerprint (4860 for KRFP, 2048 for ECFP4)
fp_len = 4860
# size of the latent space
encoding_size = 32
# size of the GRU hidden layer
hidden_size = 512
# number of GRU layers
num_layers = 2
# dropout rate
dropout = 0.1
# teacher forcing ratio
teacher_ratio = 0.5
# size of the first fc layer
fc1_size = 2048
# size of the second fc layer
fc2_size = 2048
# size of the third fc layer
fc3_size = 1024
# encoder activation function (relu, elu, gelu or leaky_relu)
encoder_activation = relu

